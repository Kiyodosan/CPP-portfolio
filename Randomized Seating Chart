// This program randomly assigns seats based on seats available and seats taken.

#include <iostream>
#include <ctype.h>
using namespace std;

void clearSeats(char arr[][4]);
void seatsAvailable(char arr[][4]);
void showSeats(const char arr[][4]);
void assignSeat(char arr[][4], int r, char c);
void seatCheck(char arr[][4], int r, char c);
bool seatTaken(const char arr[][4], int r, char c);
int charToInt(char c);

int main(){
    char seats[7][4];
    char nextSeat;
    clearSeats(seats);
    do{
        seatsAvailable(seats);
        cout << "Enter \"Y\" to assign another seat.\n";
        cin >> nextSeat;
        cout << endl;
    }while(nextSeat=='Y' || nextSeat=='y');
    return 0;
}

void clearSeats(char arr[][4]){
    arr[0][0] = 'A'; arr[0][1] = 'B'; arr[0][2] = 'C'; arr[0][3] = 'D';
    arr[1][0] = 'A'; arr[1][1] = 'B'; arr[1][2] = 'C'; arr[1][3] = 'D';
    arr[2][0] = 'A'; arr[2][1] = 'B'; arr[2][2] = 'C'; arr[2][3] = 'D';
    arr[3][0] = 'A'; arr[3][1] = 'B'; arr[3][2] = 'C'; arr[3][3] = 'D';
    arr[4][0] = 'A'; arr[4][1] = 'B'; arr[4][2] = 'C'; arr[4][3] = 'D';
    arr[5][0] = 'A'; arr[5][1] = 'B'; arr[5][2] = 'C'; arr[5][3] = 'D';
    arr[6][0] = 'A'; arr[6][1] = 'B'; arr[6][2] = 'C'; arr[6][3] = 'D';
}

void seatsAvailable(char arr[][4]){
    int row;
    char column;
    cout << "Current seats available:\n\n";
    showSeats(arr);
    cout << "Assign a seat\n"
         << "Row: ";
    cin >> row;
    cout << "Column: ";
    cin >> column;
    cout << endl;
    assignSeat(arr, row, column);
    cout << "\nNew seating chart:\n\n";
    showSeats(arr);
}

void showSeats(const char arr[][4]){
    cout << "1 " << arr[0][0] << " " << arr[0][1] << " " << arr[0][2] << " " << arr[0][3] << endl
         << "2 " << arr[1][0] << " " << arr[1][1] << " " << arr[1][2] << " " << arr[1][3] << endl
         << "3 " << arr[2][0] << " " << arr[2][1] << " " << arr[2][2] << " " << arr[2][3] << endl
         << "4 " << arr[3][0] << " " << arr[3][1] << " " << arr[3][2] << " " << arr[3][3] << endl
         << "5 " << arr[4][0] << " " << arr[4][1] << " " << arr[4][2] << " " << arr[4][3] << endl
         << "6 " << arr[5][0] << " " << arr[5][1] << " " << arr[5][2] << " " << arr[5][3] << endl
         << "7 " << arr[6][0] << " " << arr[6][1] << " " << arr[6][2] << " " << arr[6][3] << endl << endl;
}

void assignSeat(char arr[][4], int r, char c){
    switch(r){
        case 1: switch(c){
            case 'A': seatCheck(arr, r, c); break;
            case 'a': seatCheck(arr, r, c); break;
            case 'B': seatCheck(arr, r, c); break;
            case 'b': seatCheck(arr, r, c); break;
            case 'C': seatCheck(arr, r, c); break;
            case 'c': seatCheck(arr, r, c); break;
            case 'D': seatCheck(arr, r, c); break;
            case 'd': seatCheck(arr, r, c); break;
        }break;
        case 2: switch(c){
            case 'A': seatCheck(arr, r, c); break;
            case 'a': seatCheck(arr, r, c); break;
            case 'B': seatCheck(arr, r, c); break;
            case 'b': seatCheck(arr, r, c); break;
            case 'C': seatCheck(arr, r, c); break;
            case 'c': seatCheck(arr, r, c); break;
            case 'D': seatCheck(arr, r, c); break;
            case 'd': seatCheck(arr, r, c); break;
        }break;
        case 3: switch(c){
            case 'A': seatCheck(arr, r, c); break;
            case 'a': seatCheck(arr, r, c); break;
            case 'B': seatCheck(arr, r, c); break;
            case 'b': seatCheck(arr, r, c); break;
            case 'C': seatCheck(arr, r, c); break;
            case 'c': seatCheck(arr, r, c); break;
            case 'D': seatCheck(arr, r, c); break;
            case 'd': seatCheck(arr, r, c); break;
        }break;
        case 4: switch(c){
            case 'A': seatCheck(arr, r, c); break;
            case 'a': seatCheck(arr, r, c); break;
            case 'B': seatCheck(arr, r, c); break;
            case 'b': seatCheck(arr, r, c); break;
            case 'C': seatCheck(arr, r, c); break;
            case 'c': seatCheck(arr, r, c); break;
            case 'D': seatCheck(arr, r, c); break;
            case 'd': seatCheck(arr, r, c); break;
        }break;
        case 5: switch(c){
            case 'A': seatCheck(arr, r, c); break;
            case 'a': seatCheck(arr, r, c); break;
            case 'B': seatCheck(arr, r, c); break;
            case 'b': seatCheck(arr, r, c); break;
            case 'C': seatCheck(arr, r, c); break;
            case 'c': seatCheck(arr, r, c); break;
            case 'D': seatCheck(arr, r, c); break;
            case 'd': seatCheck(arr, r, c); break;
        }break;
        case 6: switch(c){
            case 'A': seatCheck(arr, r, c); break;
            case 'a': seatCheck(arr, r, c); break;
            case 'B': seatCheck(arr, r, c); break;
            case 'b': seatCheck(arr, r, c); break;
            case 'C': seatCheck(arr, r, c); break;
            case 'c': seatCheck(arr, r, c); break;
            case 'D': seatCheck(arr, r, c); break;
            case 'd': seatCheck(arr, r, c); break;
        }break;
        case 7: switch(c){
            case 'A': seatCheck(arr, r, c); break;
            case 'a': seatCheck(arr, r, c); break;
            case 'B': seatCheck(arr, r, c); break;
            case 'b': seatCheck(arr, r, c); break;
            case 'C': seatCheck(arr, r, c); break;
            case 'c': seatCheck(arr, r, c); break;
            case 'D': seatCheck(arr, r, c); break;
            case 'd': seatCheck(arr, r, c); break;
        }break;
    }
}

void seatCheck(char arr[][4], int r, char c){
    if(seatTaken(arr, r, c)){
        cout << "Seat Already Taken\n";
    }
    else{
        int col = charToInt(c);
        arr[r-1][col] = 'X';
        cout << "Seat Assigned\n";
    }
}

bool seatTaken(const char arr[][4], int r, char c){
    int col = charToInt(c);
    // cout << col << endl;
    if(arr[r-1][col]=='X')
        return true;
    else
        return false;
}

int charToInt(char c){
    if(islower(c))
       c = toupper(c);
    // cout << c << endl;
    int caseCheck = c;
    // cout << caseCheck << endl;
    return c - 'A';
}
